<?php

/**
 * @file
 * Tests for Pants module.
 */

/**
 * Tests basic functionality of Pants module.
 */
class PantsCRUDTestCase extends DrupalWebTestCase {

  /**
   * Standard test user.
   */
  protected $web_user;

  /**
   * Another standard test user.
   */
  protected $web_user2;

  public static function getInfo() {
    return array(
      'name' => 'CRUD on your pants',
      'description' => "Ensures that you can set and get a user's pants status.",
      'group' => 'Pants',
    );
  }

  function setUp() {
    parent::setUp('pants');

    $this->web_user = $this->drupalCreateUser();
    $this->web_user2 = $this->drupalCreateUser();
  }

  /**
   * Ensures basic CRUD functions work.
   */
  function testPantsCRUD() {
    // User starts with pants off... of course!
    $this->assertEqual(0, pants_get($this->web_user->uid));

    // Toggle pants setting and check it.
    pants_change($this->web_user);
    $this->assertEqual(1, pants_get($this->web_user->uid));

    // Toggle it back and check it again.
    pants_change($this->web_user);
    $this->assertEqual(0, pants_get($this->web_user->uid));

    // Explicitly set pants status and verify.
    pants_set($this->web_user->uid, 1);
    $this->assertEqual(1, pants_get($this->web_user->uid));

    // Set a pants status on a new user without pre-existing status.
    pants_set($this->web_user2->uid, 1);
    $this->assertEqual(1, pants_get($this->web_user2->uid));
  }
}

/**
 * Tests extended functionality of Pants module.
 */
class PantsUITestCase extends DrupalWebTestCase {

  /**
   * Standard test user.
   */
  protected $web_user;

  /**
   * Another standard test user.
   */
  protected $web_user2;

  public static function getInfo() {
    return array(
      'name' => 'UI on your pants',
      'description' => "Ensures that you can set and get a user's pants status through the UI.",
      'group' => 'Pants',
    );
  }

  function setUp() {
    parent::setUp('pants');

    $this->web_user = $this->drupalCreateUser(array('change pants status'));
    $this->web_user2 = $this->drupalCreateUser();
  }

  /**
   * Ensures UI functionality is working.
   */
  function testPantsUI() {
    // @todo: The assertions in this test are pretty janky. :P They only work
    // because the pants blocks are not enabled. I should probably learn xpath
    // someday.

    // Log in as web_user and check pants status.
    $this->drupalLogin($this->web_user);
    $uid = $this->web_user->uid;
    $this->drupalGet("user/$uid");
    $this->assertText('Off');

    // Change pants status and check it again.
    $edit = array('pants' => 1);
    $this->drupalPost("user/$uid/edit", $edit, t('Save'));
    $this->drupalGet("user/$uid");
    $this->assertText('On');

    // Ensure that unprivileged user cannot change pants.
    $this->drupalLogin($this->web_user2);
    $uid = $this->web_user2->uid;
    $this->drupalGet("user/$uid");
    $this->assertText('Off');

    $this->drupalGet("user/$uid/edit");
    $this->assertNoText('Pants');
  }

  /**
   * Test pants block functionality.
   */
  function testPantsBlocks() {

  }
}
