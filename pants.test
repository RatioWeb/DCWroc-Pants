<?php

/**
 * @file
 * Tests for Pants module.
 */

/**
 * Tests basic functionality of Pants module.
 */
class PantsCRUDTestCase extends DrupalWebTestCase {

  /**
   * Standard test user.
   */
  protected $web_user;

  public static function getInfo() {
    return array(
      'name' => 'CRUD on your pants',
      'description' => "Ensures that you can set and get a user's pants status.",
      'group' => 'Pants',
    );
  }

  function setUp() {
    parent::setUp('pants');

    $this->web_user = $this->drupalCreateUser();
  }

  /**
   * Ensures basic CRUD functions work.
   */
  function testPantsCRUD() {
    // User starts with pants off... of course!
    $this->assertEqual(0, pants_get($this->web_user->uid));

    // Explicitly set pants status and verify.
    pants_set($this->web_user->uid, 1);
    $this->assertEqual(1, pants_get($this->web_user->uid));
  }
}

/**
 * Tests extended functionality of Pants module.
 */
class PantsUITestCase extends DrupalWebTestCase {

  /**
   * Standard test user.
   */
  protected $web_user;

  /**
   * Another standard test user.
   */
  protected $web_user2;

  /**
   * An admin user.
   */
  protected $admin_user;

  public static function getInfo() {
    return array(
      'name' => 'UI on your pants',
      'description' => "Ensures that you can set and get a user's pants status through the UI.",
      'group' => 'Pants',
    );
  }

  function setUp() {
    parent::setUp('pants');

    $this->web_user   = $this->drupalCreateUser(array('change pants status'));
    $this->web_user2  = $this->drupalCreateUser();
    $this->admin_user = $this->drupalCreateUser(array('administer blocks', 'administer pants'));
  }

  /**
   * Ensures UI functionality is working.
   */
  function testPantsUI() {
    // @todo: The assertions in this test are pretty janky. :P They only work
    // because the pants blocks are not enabled. I should probably learn xpath
    // someday.

    // Log in as web_user and check pants status.
    $this->drupalLogin($this->web_user);
    $uid = $this->web_user->uid;
    $this->drupalGet("user/$uid");
    $this->assertText('Off');

    // Change pants status and check it again.
    $edit = array('pants' => 1);
    $this->drupalPost("user/$uid/edit", $edit, t('Save'));
    $this->drupalGet("user/$uid");
    $this->assertText('On');

    // Ensure that unprivileged user cannot change pants.
    $this->drupalLogin($this->web_user2);
    $uid = $this->web_user2->uid;
    $this->drupalGet("user/$uid");
    $this->assertText('Off');

    $this->drupalGet("user/$uid/edit");
    $this->assertNoText('Pants');
  }

  /**
   * Test pants block functionality.
   */
  function testPantsBlocks() {
    $this->drupalLogin($this->admin_user);
    // @todo: Ideally this would not depend on Bartik theme.

    // Turn on the pants blocks.
    $this->drupalPost('admin/structure/block/manage/pants/change_pants/configure', array('regions[bartik]' => 'sidebar_second'), t('Save block'));
    $this->drupalPost('admin/structure/block/manage/pants/recent_pants/configure', array('regions[bartik]' => 'sidebar_second'), t('Save block'));

    // Change pants status from the "Change pants" block.
    $this->clickLink(t('Change'));

    // Verify it was changed in the "Recent pants" block.
    $this->drupalGet('');
    $this->assertText('put pants on');

    // Repeat for pants off.
    $this->clickLink(t('Change'));
    $this->drupalGet('');
    $this->assertText('took pants off');
  }
}

/**
 * Tests extended functionality of Pants module.
 */
class PantsAJAXTestCase extends AJAXTestCase {

  /**
   * Standard test user.
   */
  protected $web_user;

  public static function getInfo() {
    return array(
      'name' => 'AJAX on your pants',
      'description' => "Ensures that you can set and get a user's pants status through AJAX.",
      'group' => 'Pants',
    );
  }

  function setUp() {
    parent::setUp('pants');

    $this->web_user   = $this->drupalCreateUser(array('change pants status'));
  }

  /**
   * Ensures AJAX functionality is working.
   */
  function testPantsAJAX() {
    $this->drupalLogin($this->web_user);

    // Send an AJAX request and verify the expected command is returned.
    $commands = $this->drupalGetAJAX('pants/change/' . $this->web_user->uid);
    $expected_command = array(
      'command' => 'insert',
      'data' => '<blink>On</blink>',
    );
    $this->assertCommand($commands, $expected_command, 'Expected AJAX command returned in response to putting pants on.');

    // Repeat for pants off.
    $commands = $this->drupalGetAJAX('pants/change/' . $this->web_user->uid);
    $expected_command = array(
      'command' => 'insert',
      'data' => '<blink>Off</blink>',
    );
    $this->assertCommand($commands, $expected_command, 'Expected AJAX command returned in response to taking pants off.');
  }
}
